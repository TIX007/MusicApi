name: build
on: 
  push: 
    branches: 
      - main # 这里表示push到main分支就会触发流程
jobs:
  build-and-deploy:
    runs-on: ubuntu-20.04
    steps:
      # 这是github官方的一个action，用于clone该仓库的源码到工作流中，
      - name: Checkout 🛎️
        uses: actions/checkout@v2
        with:
          persist-credentials: false

      # 同步server目录下的后端代码到服务器（目标路径：/home/nginx/myBlogServer）
      - name: Deploy
        uses: cross-the-world/scp-pipeline@master
        with:
          host: ${{ secrets.MY_HOST }} # 服务器IP（需要在GitHub上自行配置对应的secret）
          user: ${{ secrets.MY_USER }} # 服务器用户名
          pass: ${{ secrets.MY_PASS }} # 服务器密码
          connect_timeout: 10s
          local: './*' # 源路径（工作流）
          remote: /nodeApi/MusicApi # 目标路径（服务器）
      
      # 在服务器端执行相关指令
      - name: Executing remote ssh commands
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.MY_HOST }} # 服务器IP（需要在GitHub上自行配置对应的secret）
          username: ${{ secrets.MY_USER }} # 服务器用户名
          password: ${{ secrets.MY_PASS }} # 服务器密码
          script: |
            cd /nodeApi/MusicApi # 进入服务器中的端工程所在的目录
            export NODE_HOME=/root/.nvm/versions/node/v12.19.0  # 可使用`whereis node`查询node所在的目录
            export PATH=$PATH:$NODE_HOME/bin # 重新定义node的环境变量（必需，这样才能在后续工作流程中运行 npm install 等指令，否则会报错）
            npm install # 安装项目依赖
            pm2 delete MusicApi # 删除旧的进程
            pm2 start --name MusicApi set PORT=4010 && node app.js # 启动新的进程
